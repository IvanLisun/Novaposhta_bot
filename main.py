import telebot
from telebot import types
from datetime import datetime

bot = telebot.TeleBot('7243990700:AAFLRhd5ZPQQX8G9gc7ISAUB6FbhK-XWy8o')

# === –ö–Ω–æ–ø–∫–∏ ===
button_hi = types.KeyboardButton('–ü—Ä–∏–≤—ñ—Ç! üëã')
button_commands = types.KeyboardButton('–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞ üìã')  # –Ω–æ–≤–∞ –∫–Ω–æ–ø–∫–∞
greet_kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
greet_kb.add(button_hi)

main_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(
    types.KeyboardButton("–ó–Ω–∞–π—Ç–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è üè§"),
    types.KeyboardButton("–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ üïí"),
)
main_kb.add(
    types.KeyboardButton("–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è üìç"),
    types.KeyboardButton("–î–æ—Å—Ç—É–ø–Ω—ñ –ø–æ—Å–ª—É–≥–∏ üì¶"),
    types.KeyboardButton("üìÖ –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —á–∞—Å"),
    button_commands  # –¥–æ–¥–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞
)

inline_kb = types.InlineKeyboardMarkup()
inline_button = types.InlineKeyboardButton("üåç –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏", url="https://novaposhta.ua/")
inline_kb.add(inline_button)

# === –°–ª–æ–≤–Ω–∏–∫ –≤—ñ–¥–¥—ñ–ª–µ–Ω—å ===
branches = {
    "–∫–∏—ó–≤": ["–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 10", "–≤—É–ª. –°–∞–∫—Å–∞–≥–∞–Ω—Å—å–∫–æ–≥–æ, 45"],
    "—Ö–∞—Ä–∫—ñ–≤": ["–≤—É–ª. –°—É–º—Å—å–∫–∞, 35", "–ø—Ä–æ—Å–ø. –ù–∞—É–∫–∏, 21"],
    "–æ–¥–µ—Å–∞": ["–≤—É–ª. –î–µ—Ä–∏–±–∞—Å—ñ–≤—Å—å–∫–∞, 12", "–ø—Ä–æ—Å–ø. –®–µ–≤—á–µ–Ω–∫–∞, 4"],
    "–¥–Ω—ñ–ø—Ä–æ": ["–≤—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞, 15", "–ø—Ä–æ—Å–ø. –ì–∞–≥–∞—Ä—ñ–Ω–∞, 20"],
    "–ª—å–≤—ñ–≤": ["–≤—É–ª. –ì–æ—Ä–æ–¥–æ—Ü—å–∫–∞, 85", "–ø—Ä–æ—Å–ø. –ß–æ—Ä–Ω–æ–≤–æ–ª–∞, 67"],
    "–∑–∞–ø–æ—Ä—ñ–∂–∂—è": ["–≤—É–ª. –ü–µ—Ä–µ–º–æ–≥–∏, 36", "–ø—Ä–æ—Å–ø. –°–æ–±–æ—Ä–Ω–∏–π, 77"],
    "–≤—ñ–Ω–Ω–∏—Ü—è": ["–≤—É–ª. –°–æ–±–æ—Ä–Ω–∞, 15", "–≤—É–ª. –ö–µ–ª–µ—Ü—å–∫–∞, 78"],
    "–º–∏–∫–æ–ª–∞—ó–≤": ["–≤—É–ª. –ê–¥–º—ñ—Ä–∞–ª—å—Å—å–∫–∞, 10", "–ø—Ä–æ—Å–ø. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π, 56"],
    "—á–µ—Ä–Ω—ñ–≥—ñ–≤": ["–≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, 23", "–≤—É–ª. –†–æ–∫–æ—Å—Å–æ–≤—Å—å–∫–æ–≥–æ, 12"],
    "—á–µ—Ä–∫–∞—Å–∏": ["–≤—É–ª. –°–º—ñ–ª—è–Ω—Å—å–∫–∞, 43", "–±—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, 145"],
    "—Å—É–º–∏": ["–≤—É–ª. –•–∞—Ä–∫—ñ–≤—Å—å–∫–∞, 22", "–≤—É–ª. –ö–æ–∑–∞—Ü—å–∫–∏–π –í–∞–ª, 3"],
    "–ø–æ–ª—Ç–∞–≤–∞": ["–≤—É–ª. –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞, 12", "–≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, 77"],
    "—ñ–≤–∞–Ω–æ-—Ñ—Ä–∞–Ω–∫—ñ–≤—Å—å–∫": ["–≤—É–ª. –ù–µ–∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, 24", "–≤—É–ª. –ì–∞–ª–∏—Ü—å–∫–∞, 125"],
    "—É–∂–≥–æ—Ä–æ–¥": ["–≤—É–ª. –ö–æ—Ä–∑–æ, 13", "–≤—É–ª. –ú–∏–Ω–∞–π—Å—å–∫–∞, 23"],
    "—Ç–µ—Ä–Ω–æ–ø—ñ–ª—å": ["–≤—É–ª. –†—É—Å—å–∫–∞, 18", "–≤—É–ª. –ñ–∏–≤–æ–≤–∞, 7"],
    "—Ä—ñ–≤–Ω–µ": ["–≤—É–ª. –°–æ–±–æ—Ä–Ω–∞, 110", "–≤—É–ª. –ö–∏—ó–≤—Å—å–∫–∞, 36"],
    "–ª—É—Ü—å–∫": ["–ø—Ä–æ—Å–ø. –í–æ–ª—ñ, 15", "–≤—É–ª. –ö–æ–Ω—è–∫—ñ–Ω–∞, 18"],
    "—Ö–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π": ["–≤—É–ª. –ö–∞–º‚Äô—è–Ω–µ—Ü—å–∫–∞, 40", "–≤—É–ª. –ó–∞—Ä—ñ—á–∞–Ω—Å—å–∫–∞, 3"],
    "—á–µ—Ä–Ω—ñ–≤—Ü—ñ": ["–≤—É–ª. –ì–æ–ª–æ–≤–Ω–∞, 123", "–≤—É–ª. –†—É—Å—å–∫–∞, 56"],
    "–∫—Ä–æ–ø–∏–≤–Ω–∏—Ü—å–∫–∏–π": ["–≤—É–ª. –í–µ–ª–∏–∫–∞ –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–∞, 89", "–≤—É–ª. –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞, 33"],
    "–∂–∏—Ç–æ–º–∏—Ä": ["–≤—É–ª. –ö–∏—ó–≤—Å—å–∫–∞, 25", "–≤—É–ª. –ü–µ—Ä–µ–º–æ–≥–∏, 10"]
}

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üëã –í—ñ—Ç–∞—é —É —î–¥–∏–Ω–æ–º—É –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–º—É –±–æ—Ç—ñ –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ —É Telegram!",
        reply_markup=greet_kb
    )

@bot.message_handler(commands=['book_time'])
def book_time(message):
    msg = bot.send_message(message.chat.id, "üìÖ –í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω—É –¥–∞—Ç—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (—É —Ñ–æ—Ä–º–∞—Ç—ñ –î–î.–ú–ú.–†–†–†–†):")
    bot.register_next_step_handler(msg, ask_time)

def ask_time(message):
    date = message.text.strip()
    if not validate_date(date):
        msg = bot.send_message(message.chat.id, "‚ùóÔ∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ (–î–î.–ú–ú.–†–†–†–†):")
        bot.register_next_step_handler(msg, ask_time)
        return
    message.chat.booking_date = date
    msg = bot.send_message(message.chat.id, "‚è∞ –í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —á–∞—Å (—É —Ñ–æ—Ä–º–∞—Ç—ñ –ì–ì:–•–•):")
    bot.register_next_step_handler(msg, confirm_booking, date)

def confirm_booking(message, date):
    time = message.text.strip()
    if not validate_time(time):
        msg = bot.send_message(message.chat.id, "‚ùóÔ∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ (–ì–ì:–•–•):")
        bot.register_next_step_handler(msg, confirm_booking, date)
        return
    bot.send_message(
        message.chat.id,
        f"‚úÖ –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!\nüì¶ –î–∞—Ç–∞: {date}\n‚è∞ –ß–∞—Å: {time}\n–î—è–∫—É—î–º–æ, —â–æ –æ–±—Ä–∞–ª–∏ –ù–æ–≤—É –ü–æ—à—Ç—É!"
    )

@bot.message_handler(func=lambda message: message.text == "üìÖ –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —á–∞—Å")
def book_time_button(message):
    book_time(message)
# === –ö–æ–º–∞–Ω–¥–∞ /help ===
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(
        message.chat.id,
        "üõ† –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/start ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "/help ‚Äî –¥–æ–ø–æ–º–æ–≥–∞\n"
        "/news ‚Äî –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏\n"
        "/track ‚Äî –≤—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –ø–æ—Å–∏–ª–∫—É\n"
        "/feedback ‚Äî –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫\n"
        "/contact ‚Äî –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è\n"
        "/site ‚Äî —Å–∞–π—Ç –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏\n\n"
        "/find_by_index = –ü–æ—à—É–∫ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω–Ω—è –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º —á–∏ –∞–¥—Ä–µ—Å–æ—é"
        "–ê–±–æ –ø—Ä–æ—Å—Ç–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ.",
        reply_markup=main_kb
    )

# === –ö–æ–º–∞–Ω–¥–∞ /commands ===
@bot.message_handler(commands=['commands'])
def commands(message):
    bot.send_message(
        message.chat.id,
        "üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞:\n"
        "/start ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "/help ‚Äî –¥–æ–ø–æ–º–æ–≥–∞\n"
        "/news ‚Äî –æ—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏\n"
        "/track ‚Äî –≤—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –ø–æ—Å–∏–ª–∫—É\n"
        "/feedback ‚Äî –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫\n"
        "/contact ‚Äî –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è\n"
        "/site ‚Äî —Å–∞–π—Ç –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏\n"
        "/find_by_index = –ü–æ—à—É–∫ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω–Ω—è –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º —á–∏ –∞–¥—Ä–µ—Å–æ—é\n"
    )

# === –í—ñ—Ç–∞–Ω–Ω—è ===
@bot.message_handler(func=lambda message: message.text == "–ü—Ä–∏–≤—ñ—Ç! üëã")
def reply_hello(message):
    bot.send_message(
        message.chat.id,
        "–Ø–∫ —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏? –û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ ‚¨áÔ∏è",
        reply_markup=main_kb
    )

# === –ó–Ω–∞–π—Ç–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è ===
@bot.message_handler(func=lambda message: message.text == "–ó–Ω–∞–π—Ç–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è üè§")
def ask_city(message):
    msg = bot.send_message(message.chat.id, "üèô –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é:")
    bot.register_next_step_handler(msg, find_branch)

def find_branch(message):
    city = message.text.strip().lower()
    if city in branches:
        reply = f"üìç –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è —É –º—ñ—Å—Ç—ñ {city.capitalize()}:\n" + "\n".join(
            [f"{i+1}. {addr}" for i, addr in enumerate(branches[city])])
    else:
        reply = "üö´ –ù–∞ –∂–∞–ª—å, –Ω–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –≤ —Ü—å–æ–º—É –º—ñ—Å—Ç—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–µ –º—ñ—Å—Ç–æ."
    bot.send_message(message.chat.id, reply)

# === –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ ===
@bot.message_handler(func=lambda message: message.text == "–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ üïí")
def schedule(message):
    bot.send_message(
        message.chat.id,
        "üïí –ó–≤–∏—á–∞–π–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏:\n–ü–Ω-–ü—Ç: 08:00 - 20:00\n–°–±: 09:00 - 18:00\n–ù–¥: 10:00 - 16:00"
    )

# === –†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è ===
@bot.message_handler(func=lambda message: message.text == "–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è üìç")
def location(message):
    bot.send_message(
        message.chat.id,
        "üìå –ü—Ä–∏–∫–ª–∞–¥ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è —É –ö–∏—î–≤—ñ:"
    )
    bot.send_location(message.chat.id, latitude=50.4501, longitude=30.5234)
    bot.send_message(message.chat.id, "üîó –î–æ–¥–∞—Ç–∫–æ–≤–æ:", reply_markup=inline_kb)

# === –ü–æ—Å–ª—É–≥–∏ ===
@bot.message_handler(func=lambda message: message.text == "–î–æ—Å—Ç—É–ø–Ω—ñ –ø–æ—Å–ª—É–≥–∏ üì¶")
def services(message):
    services_kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    services_kb.add(
        "üì¨ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è", "üí∞ –ü—ñ—Å–ª—è–ø–ª–∞—Ç–∞",
        "üöö –ö—É—Ä‚Äô—î—Ä—Å—å–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞", "üì¶ –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ—Å–∏–ª–æ–∫",
        "üîÅ –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—è", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    )
    bot.send_message(
        message.chat.id,
        "üì¶ –û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ñ—à–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:",
        reply_markup=services_kb
    )

@bot.message_handler(func=lambda message: message.text in [
    "üì¨ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è",
    "üí∞ –ü—ñ—Å–ª—è–ø–ª–∞—Ç–∞",
    "üöö –ö—É—Ä‚Äô—î—Ä—Å—å–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞",
    "üì¶ –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ—Å–∏–ª–æ–∫",
    "üîÅ –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—è",
    "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
])
def service_detail(message):
    details = {
        "üì¨ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è": "üì¨ –í–∏ –º–æ–∂–µ—Ç–µ —à–≤–∏–¥–∫–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞–±–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Å–∏–ª–∫—É —É –±—É–¥—å-—è–∫–æ–º—É –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—ñ. –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–µ —ñ —á–µ—Ä–µ–∑ –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫.",
        "üí∞ –ü—ñ—Å–ª—è–ø–ª–∞—Ç–∞": "üí∞ –û—Ç—Ä–∏–º—É–≤–∞—á –º–æ–∂–µ –æ–ø–ª–∞—Ç–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –≤–∏–¥–∞—á—ñ ‚Äî –≥–æ—Ç—ñ–≤–∫–æ—é –∞–±–æ –∫–∞—Ä—Ç–∫–æ—é.",
        "üöö –ö—É—Ä‚Äô—î—Ä—Å—å–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞": "üöö –ó–∞–º–æ–≤—Ç–µ –∫—É—Ä‚Äô—î—Ä–∞ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏/–∑–±–æ—Ä—É –ø–æ—Å–∏–ª–∫–∏ –∑ –¥–æ–º—É –∞–±–æ –æ—Ñ—ñ—Å—É.",
        "üì¶ –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ—Å–∏–ª–æ–∫": "üì¶ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è ‚Äî 5 –¥–Ω—ñ–≤. –ü–æ—Ç—ñ–º ‚Äî –∑–∞ —Ç–∞—Ä–∏—Ñ–∞–º–∏.",
        "üîÅ –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—è": "üîÅ –ó–º—ñ–Ω—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –¥–æ–¥–∞—Ç–æ–∫ –∞–±–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.",
    }
    if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        bot.send_message(
            message.chat.id,
            "üîô –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é:",
            reply_markup=main_kb
        )
    else:
        bot.send_message(message.chat.id, details[message.text])

# === –ö–æ–º–∞–Ω–¥–∞ /news ===
@bot.message_handler(commands=['news'])
def news(message):
    bot.send_message(
        message.chat.id,
        "üì∞ –û—Å—Ç–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω–∏ –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏:\n"
        "1. –ù–æ–≤–µ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è —É –ë—É—á—ñ!\n"
        "2. –ö—É—Ä‚Äô—î—Ä–∏ —Ç–µ–ø–µ—Ä –ø—Ä–∞—Ü—é—é—Ç—å –¥–æ 22:00.\n"
        "3. –ó–Ω–∏–∂–∫–∏ –¥–æ -20% –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –¥–æ –∫—ñ–Ω—Ü—è –º—ñ—Å—è—Ü—è."
    )

@bot.message_handler(commands=['find_by_index'])
def find_by_index(message):
    msg = bot.send_message(message.chat.id, "üîé –í–≤–µ–¥—ñ—Ç—å –ø–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –∞–±–æ —á–∞—Å—Ç–∏–Ω—É –∞–¥—Ä–µ—Å–∏:")
    bot.register_next_step_handler(msg, search_by_index)

def search_by_index(message):
    query = message.text.strip().lower()
    results = []
    for city, addresses in branches.items():
        for addr in addresses:
            if query in addr.lower():
                results.append(f"{city.capitalize()}: {addr}")
    if results:
        bot.send_message(message.chat.id, "üìç –ó–Ω–∞–π–¥–µ–Ω–æ:\n" + "\n".join(results))
    else:
        bot.send_message(message.chat.id, "üö´ –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–ø–∏—Ç–æ–º.")

# === –ö–æ–º–∞–Ω–¥–∞ /track ===
@bot.message_handler(commands=['track'])
def track(message):
    msg = bot.send_message(message.chat.id, "üì¶ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¢–¢–ù –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è:")
    bot.register_next_step_handler(msg, process_tracking)

def process_tracking(message):
    ttn = message.text.strip()
    bot.send_message(
        message.chat.id,
        f"üîç –°—Ç–∞—Ç—É—Å –ø–æ—Å–∏–ª–∫–∏ {ttn}:\n‚úÖ –ü–æ—Å–∏–ª–∫–∞ –ø—Ä—è–º—É—î –¥–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è —É –≤–∞—à–æ–º—É –º—ñ—Å—Ç—ñ."
    )

# === –ö–æ–º–∞–Ω–¥–∞ /feedback ===
@bot.message_handler(commands=['feedback'])
def feedback(message):
    msg = bot.send_message(message.chat.id, "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫ –∞–±–æ –ø–æ–±–∞–∂–∞–Ω–Ω—è:")
    bot.register_next_step_handler(msg, save_feedback)

def save_feedback(message):
    feedback_text = message.text.strip()
    bot.send_message(message.chat.id, "‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!")

def validate_date(date_str):
    try:
        datetime.strptime(date_str, "%d.%m.%Y")
        return True
    except ValueError:
        return False

def validate_time(time_str):
    try:
        datetime.strptime(time_str, "%H:%M")
        return True
    except ValueError:
        return False

# === –ö–æ–º–∞–Ω–¥–∞ /contact ===
@bot.message_handler(commands=['contact'])
def contact(message):
    bot.send_message(
        message.chat.id,
        "üìû –°–ª—É–∂–±–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:\n"
        "–¢–µ–ª–µ—Ñ–æ–Ω: 0 800 500 609\n"
        "Email: info@novaposhta.ua"
    )

# === –ö–æ–º–∞–Ω–¥–∞ /site ===
@bot.message_handler(commands=['site'])
def site(message):
    bot.send_message(
        message.chat.id,
        "üåê –í–µ–±—Å–∞–π—Ç –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏:",
        reply_markup=inline_kb
    )

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.polling()
